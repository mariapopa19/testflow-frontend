{"ast":null,"code":"var _jsxFileName = \"D:\\\\Master\\\\Lucrare de dizertatie\\\\testflow-frontend\\\\testflow\\\\src\\\\components\\\\Login\\\\GoogleAuth.tsx\";\nimport { GoogleLogin } from '@react-oauth/google';\nimport { loginWithGoogle, registerWithGoogle } from '../../services/authService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GoogleAuth = () => {\n  const handleLogin = async token => {\n    try {\n      const response = await loginWithGoogle(token);\n      localStorage.setItem('access_token', response.token);\n      alert(`Welcome back, ${response.name}`);\n    } catch (err) {\n      console.error('Login failed', err);\n    }\n  };\n  const handleRegister = async token => {\n    try {\n      const response = await registerWithGoogle(token);\n      localStorage.setItem('access_token', response.token);\n      alert(`Account created, welcome ${response.name}`);\n    } catch (err) {\n      console.error('Register failed', err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Login with Google\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GoogleLogin, {\n      onSuccess: cred => cred.credential && handleLogin(cred.credential),\n      onError: () => console.log('Login failed')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Create Account with Google\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GoogleLogin, {\n      onSuccess: cred => cred.credential && handleRegister(cred.credential),\n      onError: () => console.log('Register failed')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_c = GoogleAuth;\nexport default GoogleAuth;\nvar _c;\n$RefreshReg$(_c, \"GoogleAuth\");","map":{"version":3,"names":["GoogleLogin","loginWithGoogle","registerWithGoogle","jsxDEV","_jsxDEV","GoogleAuth","handleLogin","token","response","localStorage","setItem","alert","name","err","console","error","handleRegister","children","fileName","_jsxFileName","lineNumber","columnNumber","onSuccess","cred","credential","onError","log","_c","$RefreshReg$"],"sources":["D:/Master/Lucrare de dizertatie/testflow-frontend/testflow/src/components/Login/GoogleAuth.tsx"],"sourcesContent":["import { GoogleLogin } from '@react-oauth/google';\r\nimport { loginWithGoogle, registerWithGoogle } from '../../services/authService';\r\n\r\nconst GoogleAuth = () => {\r\n  const handleLogin = async (token: string) => {\r\n    try {\r\n      const response = await loginWithGoogle(token);\r\n      localStorage.setItem('access_token', response.token);\r\n      alert(`Welcome back, ${response.name}`);\r\n    } catch (err) {\r\n      console.error('Login failed', err);\r\n    }\r\n  };\r\n\r\n  const handleRegister = async (token: string) => {\r\n    try {\r\n      const response = await registerWithGoogle(token);\r\n      localStorage.setItem('access_token', response.token);\r\n      alert(`Account created, welcome ${response.name}`);\r\n    } catch (err) {\r\n      console.error('Register failed', err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3>Login with Google</h3>\r\n      <GoogleLogin\r\n        onSuccess={(cred) => cred.credential && handleLogin(cred.credential)}\r\n        onError={() => console.log('Login failed')}\r\n      />\r\n\r\n      <h3>Create Account with Google</h3>\r\n      <GoogleLogin\r\n        onSuccess={(cred) => cred.credential && handleRegister(cred.credential)}\r\n        onError={() => console.log('Register failed')}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GoogleAuth;\r\n"],"mappings":";AAAA,SAASA,WAAW,QAAQ,qBAAqB;AACjD,SAASC,eAAe,EAAEC,kBAAkB,QAAQ,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjF,MAAMC,UAAU,GAAGA,CAAA,KAAM;EACvB,MAAMC,WAAW,GAAG,MAAOC,KAAa,IAAK;IAC3C,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMP,eAAe,CAACM,KAAK,CAAC;MAC7CE,YAAY,CAACC,OAAO,CAAC,cAAc,EAAEF,QAAQ,CAACD,KAAK,CAAC;MACpDI,KAAK,CAAC,iBAAiBH,QAAQ,CAACI,IAAI,EAAE,CAAC;IACzC,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,cAAc,EAAEF,GAAG,CAAC;IACpC;EACF,CAAC;EAED,MAAMG,cAAc,GAAG,MAAOT,KAAa,IAAK;IAC9C,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMN,kBAAkB,CAACK,KAAK,CAAC;MAChDE,YAAY,CAACC,OAAO,CAAC,cAAc,EAAEF,QAAQ,CAACD,KAAK,CAAC;MACpDI,KAAK,CAAC,4BAA4BH,QAAQ,CAACI,IAAI,EAAE,CAAC;IACpD,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,iBAAiB,EAAEF,GAAG,CAAC;IACvC;EACF,CAAC;EAED,oBACET,OAAA;IAAAa,QAAA,gBACEb,OAAA;MAAAa,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1BjB,OAAA,CAACJ,WAAW;MACVsB,SAAS,EAAGC,IAAI,IAAKA,IAAI,CAACC,UAAU,IAAIlB,WAAW,CAACiB,IAAI,CAACC,UAAU,CAAE;MACrEC,OAAO,EAAEA,CAAA,KAAMX,OAAO,CAACY,GAAG,CAAC,cAAc;IAAE;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CAAC,eAEFjB,OAAA;MAAAa,QAAA,EAAI;IAA0B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnCjB,OAAA,CAACJ,WAAW;MACVsB,SAAS,EAAGC,IAAI,IAAKA,IAAI,CAACC,UAAU,IAAIR,cAAc,CAACO,IAAI,CAACC,UAAU,CAAE;MACxEC,OAAO,EAAEA,CAAA,KAAMX,OAAO,CAACY,GAAG,CAAC,iBAAiB;IAAE;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACM,EAAA,GApCItB,UAAU;AAsChB,eAAeA,UAAU;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}